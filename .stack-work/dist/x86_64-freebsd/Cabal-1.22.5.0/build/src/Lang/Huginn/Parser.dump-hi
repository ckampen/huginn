
==================== FINAL INTERFACE ====================
2016-12-20 11:17:52.782703 UTC

interface hugin_IqzXpp8LztLLTlnmoPtP9a:Lang.Huginn.Parser 7103
  interface hash: d9c0f9e49f8a99b3b4e264fbe7bfa79b
  ABI hash: 88168b84d40ba17b67e19d479eb50875
  export-list hash: a3e74f0aeaa82657f49b394a7662c247
  orphan hash: 170b9b788981e8e8adc4b22233f087b6
  flag hash: 2029c556efbe7f900d5a92cb4f1e6a78
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lang.Huginn.Parser.array
  Lang.Huginn.Parser.binary
  Lang.Huginn.Parser.bla
  Lang.Huginn.Parser.bool
  Lang.Huginn.Parser.brackets
  Lang.Huginn.Parser.closure
  Lang.Huginn.Parser.code
  Lang.Huginn.Parser.comma
  Lang.Huginn.Parser.commaSep
  Lang.Huginn.Parser.double
  Lang.Huginn.Parser.elseStatement
  Lang.Huginn.Parser.expr
  Lang.Huginn.Parser.exprPython
  Lang.Huginn.Parser.file
  Lang.Huginn.Parser.formula
  Lang.Huginn.Parser.ifStatement
  Lang.Huginn.Parser.integer
  Lang.Huginn.Parser.lexeme
  Lang.Huginn.Parser.lexer
  Lang.Huginn.Parser.line
  Lang.Huginn.Parser.mkFnRec
  Lang.Huginn.Parser.mkInstanceRow
  Lang.Huginn.Parser.mkRow
  Lang.Huginn.Parser.mkTestRow
  Lang.Huginn.Parser.natural
  Lang.Huginn.Parser.noZero
  Lang.Huginn.Parser.notTabDelim
  Lang.Huginn.Parser.number
  Lang.Huginn.Parser.parens
  Lang.Huginn.Parser.parseExpr
  Lang.Huginn.Parser.parseTSVFunctions
  Lang.Huginn.Parser.parseTSVInstances
  Lang.Huginn.Parser.parseTSVTestValues
  Lang.Huginn.Parser.pythonIf
  Lang.Huginn.Parser.readDouble
  Lang.Huginn.Parser.readExpr
  Lang.Huginn.Parser.replace
  Lang.Huginn.Parser.reservedOp
  Lang.Huginn.Parser.statement
  Lang.Huginn.Parser.stringLiteral
  Lang.Huginn.Parser.stxArray
  Lang.Huginn.Parser.stxBool
  Lang.Huginn.Parser.stxLet
  Lang.Huginn.Parser.stxNum
  Lang.Huginn.Parser.stxString
  Lang.Huginn.Parser.stxVar
  Lang.Huginn.Parser.table
  Lang.Huginn.Parser.term
  Lang.Huginn.Parser.testParser
  Lang.Huginn.Parser.todouble
  Lang.Huginn.Parser.tsvCell
  Lang.Huginn.Parser.tsvFunction
  Lang.Huginn.Parser.tsvFunctionsFile
  Lang.Huginn.Parser.tsvInstanceFile
  Lang.Huginn.Parser.tsvInstanceLine
  Lang.Huginn.Parser.tsvTestValuesFile
  Lang.Huginn.Parser.tsvTestValuesLine
  Lang.Huginn.Parser.tsvToken
  Lang.Huginn.Parser.var
  Lang.Huginn.Parser.word
  Lang.Huginn.Parser.ws
module dependencies: Lang.Huginn.AST Lang.Huginn.Eval
package dependencies: array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      base-4.8.2.0* binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I integer-gmp-1.0.0.0
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y
                      semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1*
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.List.NonEmpty
                         semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.Semigroup
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unord_5iWC5HdL16JGHXLbsgBJnw:Data.HashSet
import  -/  base-4.8.2.0:Control.Applicative a8ebf5ad4932b411ad7725da68be9801
import  -/  base-4.8.2.0:Data.Either e8724afd65fd432cfe9a54014f5f762d
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:Text.Read ef0ef92fb7358ae94bab089940adfd2a
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  Lang.Huginn.AST 7f6fda1d887703f602a1de91a2651865
  exports: c987d63c9651ff78892aa6d1c469de01
  Arr c03874b5124e63d98f8b9114e391dcaa
  Bl 9b7d60c4f240a9b58d00a952f850cba8
  Closure 096bffbddb1e5027394096be9323ae33
  Eadd bfb93db3ef5094fe0873e1065671fc10
  Ediv f617217198a0b4df287b7c42e303884c
  Eeq 5173c2f74de21c63e04050d4d7cc61c0
  Egt d3c07e7b701a09f8665f4dd5f5ccb8cd
  Egte bbfb21c3c11ee58420f4f9a7b417875b
  Elt d82703d2eb5df863d78cfa962616fe2f
  Elte 33d96465eea934c8f0a1f039b28e3de1
  Emul 0291ddbbeca5b9164ac97793fe4b632c
  Epow 56a434160fa668e07a715d9bfa6c1880
  Err 88aeb38127935704988cd7c2982c1347
  Esub 06c9e7a17140279e2a65f9b36e8d4bab
  Expr 9bf6ed4e0c9b2ea4cfd44e502502934e
  If 7b79fc1d3831c2437c8570124d5f135f
  Let 925e29fdadf05ad38c94cd5ffdce6064
  NaN ecc8395bf151539eba6feddde5041320
  Num 98a2516118ced8f2165570f494f144c7
  Str b741b07a0d4ec9a8463706a04bc9cba1
  Var 47975e3edc175c4462ab8d181bf328b0
import  -/  Lang.Huginn.Eval 53e49023711ede88c1a2d9e636f03063
  exports: 2956c2b4fe04384321721cfb67594f19
  EnvEntry 15183993cb11d1576c20aaddf60d0c70
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.Parsec.Char 516b8c0cdadc400d186558a53059b54a
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.Parsec.Combinator 8770e21e417e07893d568f71365b4d91
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.Parsec.Error 63e8f1b81e63d76097df26ebf1d2ab6f
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.Parsec.Expr 434739375b855731bbe9b8f7aa10d689
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.Parsec.Language 6b1ad84e28119c358c70284be8e13fe8
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.Parsec.Prim 1601767dea663c8d2ea853ee3c53c549
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.Parsec.String c69bc219053f12ae3740800c55ee066b
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.Parsec.Token 0ce8ceb3b5500493a997cb56096b0cac
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.ParserCombinators.Parsec 979f7d9534fa46e0bd4704f6ae351173
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.ParserCombinators.Parsec.Expr 5d2770ce9c16f572e80f2c17f387cae1
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.ParserCombinators.Parsec.Language ec96b97b0f39515d91c601e8814b134c
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.ParserCombinators.Parsec.Prim 0a19ff5481bdc4ffd2f8284fcb60761f
import  -/  parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y:Text.ParserCombinators.Parsec.Token dc2ebb5bbfb7ac004c72c769be0e2c35
import  -/  semigroups-0.18.1@semig_LaeT7FLzCl4KIQUoVrPYl1:Data.Semigroup 924fce6ca278a55c2caa0cee8ef53665
731c50d7c4f1a015bf3c495bcd4a1ffd
  $s$fApplicativeParsecT ::
    GHC.Base.Applicative
      (Text.Parsec.Prim.ParsecT
         [GHC.Types.Char] () Data.Functor.Identity.Identity)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Text.Parsec.Prim.ParsecT
                       [GHC.Types.Char] () Data.Functor.Identity.Identity)
                  (Text.Parsec.Prim.$fFunctorParsecT
                     @ [GHC.Types.Char]
                     @ ()
                     @ Data.Functor.Identity.Identity)
                  (Text.Parsec.Prim.$fApplicativeParsecT_$cpure
                     @ [GHC.Types.Char]
                     @ ()
                     @ Data.Functor.Identity.Identity
                     (Text.Parsec.Prim.$fFunctorParsecT
                        @ [GHC.Types.Char]
                        @ ()
                        @ Data.Functor.Identity.Identity))
                  (Text.Parsec.Prim.$fApplicativeParsecT_$c<*>
                     @ [GHC.Types.Char]
                     @ ()
                     @ Data.Functor.Identity.Identity
                     (Text.Parsec.Prim.$fFunctorParsecT
                        @ [GHC.Types.Char]
                        @ ()
                        @ Data.Functor.Identity.Identity))
                  (Text.Parsec.Prim.$fApplicativeParsecT_$c*>
                     @ [GHC.Types.Char]
                     @ ()
                     @ Data.Functor.Identity.Identity
                     (Text.Parsec.Prim.$fFunctorParsecT
                        @ [GHC.Types.Char]
                        @ ()
                        @ Data.Functor.Identity.Identity))
                  (Text.Parsec.Prim.$fApplicativeParsecT_$c<*
                     @ [GHC.Types.Char]
                     @ ()
                     @ Data.Functor.Identity.Identity
                     (Text.Parsec.Prim.$fFunctorParsecT
                        @ [GHC.Types.Char]
                        @ ()
                        @ Data.Functor.Identity.Identity)) -}
6faa1761dfe58df3e583141bddf6066b
  $sread :: GHC.Base.String -> GHC.Types.Double
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ s :: GHC.Base.String ->
                 case Text.Read.readEither
                        @ GHC.Types.Double
                        GHC.Read.$fReadDouble
                        s of wild {
                   Data.Either.Left x -> GHC.Err.error @ GHC.Types.Double x
                   Data.Either.Right y -> y }) -}
81a67b12d8c4266d17b7c38a1dc0169f
  $wa ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((() -> [GHC.Base.String])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((() -> [GHC.Base.String])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [0],
     Unfolding: (\ @ b1
                   w :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w1 :: (() -> [GHC.Base.String])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w2 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w3 :: (() -> [GHC.Base.String])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Combinator.$wa11
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ GHC.Base.String
                   @ GHC.Types.Char
                   Lang.Huginn.Parser.line
                   Lang.Huginn.Parser.file4
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b1
                   w
                   (\ x :: [GHC.Base.String] -> w1 (\ ds :: () -> x))
                   w2
                   (\ x :: [GHC.Base.String] -> w3 (\ ds :: () -> x))) -}
78ef1fac6c3413e4419fadfe4e6f9688
  $wa1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((()
         -> [(GHC.Base.String,
              Data.Either.Either
                Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((()
         -> [(GHC.Base.String,
              Data.Either.Either
                Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [0],
     Unfolding: (\ @ b1
                   w :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w1 :: (()
                          -> [(GHC.Base.String,
                               Data.Either.Either
                                 Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w2 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w3 :: (()
                          -> [(GHC.Base.String,
                               Data.Either.Either
                                 Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Combinator.$wa4
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ (GHC.Base.String,
                      Data.Either.Either
                        Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)
                   @ GHC.Base.String
                   Lang.Huginn.Parser.parseTSVFunctions5
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(GHC.Base.String,
                               Data.Either.Either
                                 Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)>_R))
                   Lang.Huginn.Parser.file4
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b1
                   w
                   (\ x :: [(GHC.Base.String,
                             Data.Either.Either
                               Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)] ->
                    w1 (\ ds :: () -> x))
                   w2
                   (\ x :: [(GHC.Base.String,
                             Data.Either.Either
                               Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)] ->
                    w3 (\ ds :: () -> x))) -}
e040fb433119ca0bf0a76129cf268b14
  $wa2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((() -> [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((() -> [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [0],
     Unfolding: (\ @ b1
                   w :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w1 :: (()
                          -> [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w2 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w3 :: (()
                          -> [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Combinator.$wa4
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)
                   @ GHC.Base.String
                   Lang.Huginn.Parser.parseTSVInstances4
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)>_R))
                   Lang.Huginn.Parser.file4
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b1
                   w
                   (\ x :: [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)] ->
                    w1 (\ ds :: () -> x))
                   w2
                   (\ x :: [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)] ->
                    w3 (\ ds :: () -> x))) -}
72708b421250b30570ceac3d528b985f
  $wa3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((()
         -> [(GHC.Integer.Type.Integer,
              GHC.Base.String,
              GHC.Types.Double,
              GHC.Types.Double,
              GHC.Types.Bool)])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((()
         -> [(GHC.Integer.Type.Integer,
              GHC.Base.String,
              GHC.Types.Double,
              GHC.Types.Double,
              GHC.Types.Bool)])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [0],
     Unfolding: (\ @ b1
                   w :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w1 :: (()
                          -> [(GHC.Integer.Type.Integer,
                               GHC.Base.String,
                               GHC.Types.Double,
                               GHC.Types.Double,
                               GHC.Types.Bool)])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w2 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w3 :: (()
                          -> [(GHC.Integer.Type.Integer,
                               GHC.Base.String,
                               GHC.Types.Double,
                               GHC.Types.Double,
                               GHC.Types.Bool)])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Combinator.$wa4
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ (GHC.Integer.Type.Integer,
                      GHC.Base.String,
                      GHC.Types.Double,
                      GHC.Types.Double,
                      GHC.Types.Bool)
                   @ GHC.Base.String
                   Lang.Huginn.Parser.parseTSVTestValues4
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(GHC.Integer.Type.Integer,
                               GHC.Base.String,
                               GHC.Types.Double,
                               GHC.Types.Double,
                               GHC.Types.Bool)>_R))
                   Lang.Huginn.Parser.file4
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b1
                   w
                   (\ x :: [(GHC.Integer.Type.Integer,
                             GHC.Base.String,
                             GHC.Types.Double,
                             GHC.Types.Double,
                             GHC.Types.Bool)] ->
                    w1 (\ ds :: () -> x))
                   w2
                   (\ x :: [(GHC.Integer.Type.Integer,
                             GHC.Base.String,
                             GHC.Types.Double,
                             GHC.Types.Double,
                             GHC.Types.Bool)] ->
                    w3 (\ ds :: () -> x))) -}
4f671bf37fe1701b663b8909b3c7b3c2
  $wa4 ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><L,U><L,U><S,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
5925d8113cccedd874daa90b3c715920
  $wmkTestRow ::
    t
    -> t1
    -> GHC.Base.String
    -> GHC.Base.String
    -> (# t, t1, GHC.Types.Double, GHC.Types.Double, GHC.Types.Bool #)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ @ t
                   @ t1
                   w :: t
                   w1 :: t1
                   w2 :: GHC.Base.String
                   w3 :: GHC.Base.String ->
                 let {
                   tv :: GHC.Types.Double
                   = case Text.Read.readEither6
                            @ GHC.Types.Double
                            (Text.ParserCombinators.ReadP.run
                               @ GHC.Types.Double
                               Lang.Huginn.Parser.mkTestRow3
                               w3) of wild {
                       [] -> Lang.Huginn.Parser.mkTestRow2
                       : x ds
                       -> case ds of wild1 {
                            [] -> x : ipv ipv1 -> Lang.Huginn.Parser.mkTestRow1 } }
                 } in
                 let {
                   hv :: GHC.Types.Double
                   = case Text.Read.readEither6
                            @ GHC.Types.Double
                            (Text.ParserCombinators.ReadP.run
                               @ GHC.Types.Double
                               Lang.Huginn.Parser.mkTestRow3
                               w2) of wild {
                       [] -> Lang.Huginn.Parser.mkTestRow2
                       : x ds
                       -> case ds of wild1 {
                            [] -> x : ipv ipv1 -> Lang.Huginn.Parser.mkTestRow1 } }
                 } in
                 (# w,
                    w1,
                    hv,
                    tv,
                    case hv of ds1 { GHC.Types.D# ds2 ->
                    case {__pkg_ccall base-4.8.2.0 rintDouble GHC.Prim.Double#
                                                              -> GHC.Prim.State# GHC.Prim.RealWorld
                                                              -> (# GHC.Prim.State#
                                                                      GHC.Prim.RealWorld,
                                                                    GHC.Prim.Double# #)}
                           ds2
                           GHC.Prim.realWorld# of wild { (#,#) ds3 ds4 ->
                    case GHC.Integer.Type.decodeDoubleInteger
                           ds4 of ds { (#,#) ipv ipv1 ->
                    case tv of ds7 { GHC.Types.D# ds8 ->
                    case {__pkg_ccall base-4.8.2.0 rintDouble GHC.Prim.Double#
                                                              -> GHC.Prim.State# GHC.Prim.RealWorld
                                                              -> (# GHC.Prim.State#
                                                                      GHC.Prim.RealWorld,
                                                                    GHC.Prim.Double# #)}
                           ds8
                           GHC.Prim.realWorld# of wild1 { (#,#) ds9 ds10 ->
                    case GHC.Integer.Type.decodeDoubleInteger
                           ds10 of ds11 { (#,#) ipv2 ipv3 ->
                    let {
                      a5 :: GHC.Integer.Type.Integer
                      = case GHC.Prim.tagToEnum#
                               @ GHC.Types.Bool
                               (GHC.Prim.<# ipv3 0) of wild2 {
                          GHC.Types.False -> GHC.Integer.Type.shiftLInteger ipv2 ipv3
                          GHC.Types.True
                          -> case GHC.Integer.Type.integerToInt ipv2 of n { DEFAULT ->
                             GHC.Integer.Type.smallInteger
                               (GHC.Prim.uncheckedIShiftRA# n (GHC.Prim.negateInt# ipv3)) } }
                    } in
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<# ipv1 0) of wild2 {
                      GHC.Types.False
                      -> case GHC.Integer.Type.eqInteger#
                                (GHC.Integer.Type.shiftLInteger ipv ipv1)
                                a5 of wild3 { DEFAULT ->
                         GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 }
                      GHC.Types.True
                      -> case GHC.Integer.Type.integerToInt ipv of n { DEFAULT ->
                         case GHC.Integer.Type.eqInteger#
                                (GHC.Integer.Type.smallInteger
                                   (GHC.Prim.uncheckedIShiftRA# n (GHC.Prim.negateInt# ipv1)))
                                a5 of wild3 { DEFAULT ->
                         GHC.Prim.tagToEnum# @ GHC.Types.Bool wild3 } } } } } } } } } #)) -}
f4893cbb9cfba6dbf74eeb79ad62d28c
  $wreadExpr ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> (# GHC.Base.String, Lang.Huginn.AST.Expr #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ w :: GHC.Base.String
                   w1 :: GHC.Base.String
                   w2 :: GHC.Base.String ->
                 case GHC.Base.eqString w2 Lang.Huginn.Parser.readExpr16 of wild {
                   GHC.Types.False
                   -> case GHC.Base.eqString
                             w2
                             Lang.Huginn.Parser.readExpr15 of wild1 {
                        GHC.Types.False -> (# w, Lang.Huginn.AST.Str w1 #)
                        GHC.Types.True
                        -> (# w,
                              case (Text.Parsec.Prim.runPT
                                      @ [GHC.Types.Char]
                                      @ ()
                                      @ Data.Functor.Identity.Identity
                                      @ Lang.Huginn.AST.Expr
                                      @ GHC.Types.Char
                                      (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                                      Lang.Huginn.Parser.readExpr6
                                        `cast`
                                      (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                                                <[GHC.Types.Char]>_R
                                                <()>_R
                                                <Data.Functor.Identity.Identity>_R
                                                <Lang.Huginn.AST.Expr>_R))
                                      GHC.Tuple.()
                                      Lang.Huginn.Parser.readExpr5
                                      w1)
                                     `cast`
                                   (Data.Functor.Identity.NTCo:Identity[0]
                                        <Data.Either.Either
                                           Text.Parsec.Error.ParseError
                                           Lang.Huginn.AST.Expr>_R) of wild2 {
                                Data.Either.Left ds -> Lang.Huginn.Parser.readExpr4
                                Data.Either.Right x -> x } #) }
                   GHC.Types.True
                   -> (# w,
                         Lang.Huginn.AST.Bl
                           (case Text.Read.readEither6
                                   @ GHC.Types.Bool
                                   (Text.ParserCombinators.ReadP.run
                                      @ GHC.Types.Bool
                                      Lang.Huginn.Parser.readExpr3
                                      w1) of wild1 {
                              [] -> Lang.Huginn.Parser.readExpr2
                              : x ds
                              -> case ds of wild2 {
                                   [] -> x : ipv ipv1 -> Lang.Huginn.Parser.readExpr1 } }) #) }) -}
512c9a7087bf39aaac060b9ad039d42b
  array :: Text.Parsec.String.Parser [Lang.Huginn.AST.Expr]
  {- Unfolding: (case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds20
                   @ [Lang.Huginn.AST.Expr]
                   (ds28
                      @ Lang.Huginn.AST.Expr
                      Lang.Huginn.Parser.array1
                        `cast`
                      (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <Lang.Huginn.AST.Expr>_R))) }) -}
aca2eb51490a8b0b3af5c6c51074e10c
  array1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)> -}
9b7f879b7e0d705090a2797b561e034c
  binary ::
    GHC.Base.String
    -> (a -> a -> a)
    -> Text.Parsec.Expr.Assoc
    -> Text.ParserCombinators.Parsec.Expr.Operator GHC.Types.Char () a
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ @ a5 name :: GHC.Base.String fn :: a5 -> a5 -> a5 ->
                 Text.ParserCombinators.Parsec.Expr.Infix
                   @ GHC.Types.Char
                   @ ()
                   @ a5
                   (let {
                      m1 :: Text.Parsec.Prim.ParsecT
                              [GHC.Types.Char] () Data.Functor.Identity.Identity ()
                      = case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                        ds4 name }
                    } in
                    (\ @ b1
                       eta :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                       eta1 :: (a5 -> a5 -> a5)
                               -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                               -> Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b1
                       eta2 :: Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b1
                       eta3 :: (a5 -> a5 -> a5)
                               -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                               -> Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b1
                       eta4 :: Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b1 ->
                     m1
                       `cast`
                     (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <()>_R)
                       @ b1
                       eta
                       (\ x :: ()
                          s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                          err :: Text.Parsec.Error.ParseError ->
                        eta1
                          fn
                          s2
                          (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                           case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                           case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                           case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                           case Text.Parsec.Error.$wmergeError
                                  ww4
                                  ww5
                                  ww6
                                  ww2
                                  ww11
                                  ww12
                                  ww13
                                  (GHC.Types.[]
                                     @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                           Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                       eta2
                       (\ x :: ()
                          s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                          err :: Text.Parsec.Error.ParseError ->
                        eta3
                          fn
                          s2
                          (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                           case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                           case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                           case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                           case Text.Parsec.Error.$wmergeError
                                  ww4
                                  ww5
                                  ww6
                                  ww2
                                  ww11
                                  ww12
                                  ww13
                                  (GHC.Types.[]
                                     @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                           Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                       eta4)
                      `cast`
                    (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                              <[GHC.Types.Char]>_R
                              <()>_R
                              <Data.Functor.Identity.Identity>_R
                              <a5 -> a5 -> a5>_R)))) -}
9f6474ac3845c8031dd176058db8d53d
  bla :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.bla1
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
5e1c1da3a155ceccffafacfc9999d0b0
  bla1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.<?>1
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.bla3
                   Lang.Huginn.Parser.bla2) -}
6f35f7d15e7860d92b1bc48c5b07ce5d
  bla2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "expression"#) -}
278f82c672a4f6d56e2fba53da1cc2ca
  bla3 ::
    Text.Parsec.String.GenParser GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Text.Parsec.Expr.buildExpressionParser1
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.bla5
                   Lang.Huginn.Parser.bla4
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lang.Huginn.AST.Expr>_R))) -}
b86c8896c5af975657ff8b6787528d98
  bla4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,U><L,C(U)> -}
35bcb16c7b95cb0c4ab6c477cf1c9d9b
  bla5 ::
    [[Text.Parsec.Expr.Operator
        [GHC.Types.Char]
        ()
        Data.Functor.Identity.Identity
        Lang.Huginn.AST.Expr]]
  {- Unfolding: (GHC.Base.map
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr]
                   @ [Text.Parsec.Expr.Operator
                        [GHC.Types.Char]
                        ()
                        Data.Functor.Identity.Identity
                        Lang.Huginn.AST.Expr]
                   (Text.ParserCombinators.Parsec.Expr.buildExpressionParser1
                      @ GHC.Types.Char
                      @ ()
                      @ Lang.Huginn.AST.Expr)
                   Lang.Huginn.Parser.table) -}
8319d0126ed3a8c82e059282dc6b07b2
  bool :: Text.Parsec.String.Parser GHC.Types.Bool
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.bool1
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Types.Bool>_R)) -}
610cfe450ff96206c31186612e28a09f
  bool1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Bool
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Bool
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b
                   eta2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta3 :: GHC.Types.Bool
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta5 :: GHC.Types.Bool
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta6 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b ->
                 Text.Parsec.Prim.$wa
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Bool
                   @ GHC.Types.Bool
                   Lang.Huginn.Parser.bool6
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Bool -> GHC.Types.Bool>_R))
                   Lang.Huginn.Parser.bool5
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Bool>_R))
                   @ b
                   eta2
                   eta3
                   eta4
                   eta5
                   (\ err :: Text.Parsec.Error.ParseError ->
                    Text.Parsec.Prim.$wa
                      @ [GHC.Types.Char]
                      @ ()
                      @ Data.Functor.Identity.Identity
                      @ GHC.Types.Bool
                      @ GHC.Types.Bool
                      Lang.Huginn.Parser.bool3
                        `cast`
                      (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <GHC.Types.Bool -> GHC.Types.Bool>_R))
                      Lang.Huginn.Parser.bool2
                        `cast`
                      (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <GHC.Types.Bool>_R))
                      @ b
                      eta2
                      eta3
                      eta4
                      (\ y :: GHC.Types.Bool
                         s' :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta5 y s' (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta6 (Text.Parsec.Error.mergeError err err')))) -}
c0400bc64bce01d6af997e4db89ea71c
  bool2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Bool
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Bool
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   ds :: GHC.Types.Bool
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   ds1 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b
                   eok :: GHC.Types.Bool
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b
                   ds2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b ->
                 eok
                   GHC.Types.False
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
798602294827b2f37759128cdccd679b
  bool3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Types.Bool -> GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Types.Bool -> GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(U)><L,1*C1(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   eta2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta3 :: (GHC.Types.Bool -> GHC.Types.Bool)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta5 :: (GHC.Types.Bool -> GHC.Types.Bool)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta6 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 let {
                   lvl9 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   = eta3 (GHC.Base.id @ GHC.Types.Bool)
                 } in
                 Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   Lang.Huginn.Parser.bool4
                   @ b1
                   eta2
                   (\ x :: GHC.Base.String -> lvl9)
                   eta4
                   (\ x :: GHC.Base.String[OneShot] ->
                    eta5 (GHC.Base.id @ GHC.Types.Bool))
                   eta6) -}
5e42a9e279c5b3a1e732142b4d2ed692
  bool4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "false"#) -}
fb50c89f4646863196fbf85b2c09db89
  bool5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Bool
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Bool
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   ds :: GHC.Types.Bool
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   ds1 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b
                   eok :: GHC.Types.Bool
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b
                   ds2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b ->
                 eok
                   GHC.Types.True
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
9a7ed3567a3985e13a317552464e94d4
  bool6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Types.Bool -> GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Types.Bool -> GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,C(U)><L,1*C1(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   eta2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta3 :: (GHC.Types.Bool -> GHC.Types.Bool)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta5 :: (GHC.Types.Bool -> GHC.Types.Bool)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta6 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 let {
                   lvl9 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   = eta3 (GHC.Base.id @ GHC.Types.Bool)
                 } in
                 Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   Lang.Huginn.Parser.bool7
                   @ b1
                   eta2
                   (\ x :: GHC.Base.String -> lvl9)
                   eta4
                   (\ x :: GHC.Base.String[OneShot] ->
                    eta5 (GHC.Base.id @ GHC.Types.Bool))
                   eta6) -}
80d3952a6096a2048b3569a0f8af0155
  bool7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "true"#) -}
ba3efc73af5d237f761c07aaff1e01b7
  brackets ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity a
  {- Unfolding: (\ @ a5 ->
                 case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds20 @ a5 }) -}
dd6e6914008c6e8ee246a1ed154bbfbb
  closure :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.closure1
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
8f1bc70f63d6b1a933c9f40285c3492e
  closure1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   cok :: Lang.Huginn.AST.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   cerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eok :: Lang.Huginn.AST.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.closure_p
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <Lang.Huginn.AST.Expr>_R)
                   @ b1
                   s1
                   (\ x :: Lang.Huginn.AST.Expr -> cok (Lang.Huginn.AST.Closure x))
                   cerr
                   (\ x :: Lang.Huginn.AST.Expr -> eok (Lang.Huginn.AST.Closure x))
                   eerr) -}
17a8a96c556e63589b5a2d282d328fd3
  closure10 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      Lang.Huginn.AST.Expr
  {- Unfolding: (case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds15
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.array1
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lang.Huginn.AST.Expr>_R)) }) -}
e491eb969bb6936226d013b25e558adb
  closure11 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds15
                   @ GHC.Base.String
                   Lang.Huginn.Parser.closure12
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R)) }) -}
893cbc8bec61510cc53db8a38b33d10c
  closure12 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   Lang.Huginn.Parser.closure13) -}
ab66f3e1c6aaa3b3bf058360aa33f5a8
  closure13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "if"#) -}
84209a48c73655a5b2a68a7c57cadc30
  closure2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b
                   eta2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta3 :: Lang.Huginn.AST.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta5 :: Lang.Huginn.AST.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta6 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b ->
                 let {
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                     {- Arity: 1, Strictness: <L,U(U(U,U,U),U)> -}
                   = \ err :: Text.Parsec.Error.ParseError ->
                     Lang.Huginn.Parser.array1
                       @ b
                       eta2
                       eta3
                       eta4
                       (\ y :: Lang.Huginn.AST.Expr
                          s' :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                          err' :: Text.Parsec.Error.ParseError[OneShot] ->
                        eta5 y s' (Text.Parsec.Error.mergeError err err'))
                       (\ err' :: Text.Parsec.Error.ParseError ->
                        eta6 (Text.Parsec.Error.mergeError err err'))
                 } in
                 Lang.Huginn.Parser.closure3 @ b eta2 eta3 eerr eta5 eerr) -}
d0dc4954800b0a4205f85107cdb8f499
  closure3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b
                   eta2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta3 :: Lang.Huginn.AST.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta5 :: Lang.Huginn.AST.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta6 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b ->
                 Lang.Huginn.Parser.closure7
                   @ b
                   eta2
                   eta3
                   eta4
                   eta5
                   (\ err :: Text.Parsec.Error.ParseError ->
                    Lang.Huginn.Parser.closure4
                      @ b
                      eta2
                      eta3
                      eta4
                      (\ y :: Lang.Huginn.AST.Expr
                         s' :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta5 y s' (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta6 (Text.Parsec.Error.mergeError err err')))) -}
1d6a941dcbbd7ddd766036cd7dcd1892
  closure4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta1 :: Lang.Huginn.AST.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: Lang.Huginn.AST.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.closure6
                   @ b1
                   eta
                   (\ x :: Lang.Huginn.AST.Expr
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                      err :: Text.Parsec.Error.ParseError ->
                    Lang.Huginn.Parser.closure5
                      x
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: Lang.Huginn.AST.Expr
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ x :: Lang.Huginn.AST.Expr
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                      err :: Text.Parsec.Error.ParseError ->
                    Lang.Huginn.Parser.closure5
                      x
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: Lang.Huginn.AST.Expr
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
0a2ad7a84fffb511d98af15dd57fc027
  closure5 ::
    Lang.Huginn.AST.Expr
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (Lang.Huginn.AST.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Lang.Huginn.AST.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
871085a72e9751f04478d48172ac9b12
  closure6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(U)><L,U><L,C(U)><L,C(U)> -}
c736d5321a6867b6939aa5dd7f6ab578
  closure7 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta1 :: Lang.Huginn.AST.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: Lang.Huginn.AST.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.closure11
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Base.String>_R)
                   @ b1
                   eta
                   (\ x :: GHC.Base.String
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                      err :: Text.Parsec.Error.ParseError ->
                    Lang.Huginn.Parser.closure8
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: Lang.Huginn.AST.Expr
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ x :: GHC.Base.String
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                      err :: Text.Parsec.Error.ParseError ->
                    Lang.Huginn.Parser.closure8
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: Lang.Huginn.AST.Expr
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
139c0b8d54490a02c44d7ca5d5a43bcc
  closure8 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta1 :: Lang.Huginn.AST.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: Lang.Huginn.AST.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.closure10
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <Lang.Huginn.AST.Expr>_R)
                   @ b1
                   eta
                   (\ x :: Lang.Huginn.AST.Expr
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                      err :: Text.Parsec.Error.ParseError ->
                    Lang.Huginn.Parser.closure9
                      x
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: Lang.Huginn.AST.Expr
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ x :: Lang.Huginn.AST.Expr
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                      err :: Text.Parsec.Error.ParseError ->
                    Lang.Huginn.Parser.closure9
                      x
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: Lang.Huginn.AST.Expr
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
587d16eb9f9024671ce1d93bfb9ad03e
  closure9 ::
    Lang.Huginn.AST.Expr
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (Lang.Huginn.AST.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Lang.Huginn.AST.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
0deca423cd340b4e1674cff5673a7caf
  closure_p ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char]
      ()
      Data.Functor.Identity.Identity
      Lang.Huginn.AST.Expr
  {- Unfolding: (case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds17
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.closure2
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lang.Huginn.AST.Expr>_R)) }) -}
1f3b60c7c53a701b04fabb321f495f3d
  code :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.closure2
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
27ea7f3466f956849b826d11b86e3dbb
  comma ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds23 }) -}
9d51a6a1fdb191f5c52a27730e6c7d2a
  commaSep ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity [a]
  {- Unfolding: (\ @ a5 ->
                 case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds28 @ a5 }) -}
5602d978912700fb0f4f37ef2c0529d5
  double ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Double
  {- Unfolding: (case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds9 }) -}
694ca340f72db59a2d3eb7fcb7ab118d
  elseStatement ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      Lang.Huginn.AST.Expr
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.elseStatement1
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
4d8bc42825d21b01c2518944da747bdf
  elseStatement1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w4 :: Lang.Huginn.AST.Expr
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w5 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w6 :: Lang.Huginn.AST.Expr
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w7 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Prim.$wa
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ Lang.Huginn.AST.Expr
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.elseStatement2
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lang.Huginn.AST.Expr -> Lang.Huginn.AST.Expr>_R))
                   Lang.Huginn.Parser.array1
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lang.Huginn.AST.Expr>_R))
                   @ b1
                   w3
                   w4
                   w5
                   w6
                   w7) -}
9444ba867892fb3e7daafe2debbd4550
  elseStatement2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((Lang.Huginn.AST.Expr -> Lang.Huginn.AST.Expr)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((Lang.Huginn.AST.Expr -> Lang.Huginn.AST.Expr)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   eta2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta3 :: (Lang.Huginn.AST.Expr -> Lang.Huginn.AST.Expr)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta5 :: (Lang.Huginn.AST.Expr -> Lang.Huginn.AST.Expr)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta6 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.elseStatement_eta1
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Base.String>_R)
                   @ b1
                   eta2
                   (\ x :: GHC.Base.String ->
                    eta3 (GHC.Base.id @ Lang.Huginn.AST.Expr))
                   eta4
                   (\ x :: GHC.Base.String ->
                    eta5 (GHC.Base.id @ Lang.Huginn.AST.Expr))
                   eta6) -}
062f94720e2d77d686a0affe493b9dd4
  elseStatement3 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   Lang.Huginn.Parser.elseStatement4) -}
a25eee5a8a00f1acced9008f98ef1365
  elseStatement4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "else"#) -}
c6e296b35a19246b73224ed35677eb54
  elseStatement_eta1 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds15
                   @ GHC.Base.String
                   Lang.Huginn.Parser.elseStatement3
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R)) }) -}
1d066903b37e348c7ebf9ba16511ee67
  expr :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.array1
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
d019bef4dad69904a9bdbee0b6f8487b
  exprPython :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(U)><L,U><L,C(U)><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.closure6
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
0d6bba31e5cda8411177d355ca9d9265
  file :: Text.Parsec.String.Parser [GHC.Base.String]
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.file1
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[GHC.Base.String]>_R)) -}
0dd3c6d6b9230678ce5635daa097cf08
  file1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Base.String]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([GHC.Base.String]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w4 :: [GHC.Base.String]
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w5 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w6 :: [GHC.Base.String]
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w7 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Prim.$wa
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ [GHC.Base.String]
                   Lang.Huginn.Parser.file3
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <() -> [GHC.Base.String]>_R))
                   Lang.Huginn.Parser.file2
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   w3
                   w4
                   w5
                   w6
                   w7) -}
1f7ef1ee20cf8ff46433f59bfcaba678
  file2 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Text.Parsec.Combinator.eof1
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   GHC.Show.$fShowChar) -}
4231a58f833cd7fa761b3de71586f543
  file3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((() -> [GHC.Base.String])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((() -> [GHC.Base.String])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   w :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w1 :: (() -> [GHC.Base.String])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w2 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w3 :: (() -> [GHC.Base.String])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.$wa @ b1 w w1 w2 w3) -}
b5f3eed37bdf245cd33e48dba5f05c70
  file4 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   Lang.Huginn.Parser.file_w1) -}
9f078c3c1a9c9449e33eda93f4de2a89
  file_w1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\n"#) -}
9a1cd329d5ef5c962949d2f6ede66811
  formula :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.formula1
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
44571f0dfc98e5d94014d494cc99a535
  formula1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w4 :: Lang.Huginn.AST.Expr
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w5 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w6 :: Lang.Huginn.AST.Expr
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w7 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Prim.$wa
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.formula2
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <() -> Lang.Huginn.AST.Expr>_R))
                   Lang.Huginn.Parser.file2
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   w3
                   w4
                   w5
                   w6
                   w7) -}
ad94f0d0a628e38476a6a8c71b3132bc
  formula2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((() -> Lang.Huginn.AST.Expr)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((() -> Lang.Huginn.AST.Expr)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(U)><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   cok :: (() -> Lang.Huginn.AST.Expr)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   cerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eok :: (() -> Lang.Huginn.AST.Expr)
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.closure2
                   @ b1
                   s1
                   (\ x :: Lang.Huginn.AST.Expr -> cok (\ ds :: () -> x))
                   cerr
                   (\ x :: Lang.Huginn.AST.Expr -> eok (\ ds :: () -> x))
                   eerr) -}
cd73cd60aeaa894994ce8d05639eefde
  ifStatement :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.closure7
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
60b3b93c7d3519cf614b8acf8d71d773
  integer ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      GHC.Integer.Type.Integer
  {- Unfolding: (case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds8 }) -}
b018282cf6d530193b6176f8cb34fa25
  lexeme ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity a
  {- Unfolding: (\ @ a5 ->
                 case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds15 @ a5 }) -}
847f536710f03a242fc095e338326fa6
  lexer :: Text.Parsec.Token.TokenParser ()
  {- Unfolding: (Text.Parsec.Token.makeTokenParser
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   Lang.Huginn.Parser.lexer1) -}
ee4e39d74d23a78543a9cd3e7c3f6b32
  lexer1 ::
    Text.Parsec.Token.GenLanguageDef
      GHC.Base.String () Data.Functor.Identity.Identity
  {- Unfolding: (Text.Parsec.Token.LanguageDef
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   Text.Parsec.Language.haskellDef86
                   Text.Parsec.Language.haskellDef85
                   Text.Parsec.Language.haskellDef84
                   GHC.Types.True
                   (Text.Parsec.Language.haskellDef82 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   (Text.Parsec.Language.haskellDef79 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   (Text.Parsec.Language.haskellDef78 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   (Text.Parsec.Language.haskellDef78 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   Text.Parsec.Language.haskellDef21
                   Lang.Huginn.Parser.lexer2
                   GHC.Types.True) -}
0fb6edfa0cc4af1e3e8a06f4ae9f4efb
  lexer10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "*"#) -}
1d1d865049cc0608b76862307f9a2564
  lexer11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-"#) -}
42217a0dda9786ecab520cceb200f413
  lexer12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "+"#) -}
0c3f20ce859f16b2897c6bfcd90aa79e
  lexer13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "^"#) -}
51d18ca079f3d762a6a15fa4b9263ec3
  lexer14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "="#) -}
9bb5a9b45682e9dcdff2c50f436292e7
  lexer15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "=="#) -}
835ef47013744228293886de2c9bfdd5
  lexer2 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lang.Huginn.Parser.lexer15
                   Lang.Huginn.Parser.lexer3) -}
e8f84e62f8bd87bd9d1d2de17ba6c094
  lexer3 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lang.Huginn.Parser.lexer14
                   Lang.Huginn.Parser.lexer4) -}
e33f94ff28584a995ecb106220cfc318
  lexer4 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lang.Huginn.Parser.lexer13
                   Lang.Huginn.Parser.lexer5) -}
aff3302c2e2d7d18c08a9df1d7d224d7
  lexer5 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lang.Huginn.Parser.lexer12
                   Lang.Huginn.Parser.lexer6) -}
7dc5a695413b22eb6c30a340b37abe7e
  lexer6 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lang.Huginn.Parser.lexer11
                   Lang.Huginn.Parser.lexer7) -}
9ff91e21228cb6191868a2d4df55daea
  lexer7 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lang.Huginn.Parser.lexer10
                   Lang.Huginn.Parser.lexer8) -}
fd60693b34379d250aa172778d9ad62b
  lexer8 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Lang.Huginn.Parser.lexer9
                   (GHC.Types.[] @ GHC.Base.String)) -}
5cafc387485e0362b3730551ffc23624
  lexer9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/"#) -}
2e31eb945677a8a6b3b956ccbc35c4ca
  line :: Text.Parsec.String.Parser GHC.Base.String
  {- Unfolding: (Text.Parsec.Prim.$fAlternativeParsecT_$cmany
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   Lang.Huginn.Parser.$s$fApplicativeParsecT
                   @ GHC.Types.Char
                   Lang.Huginn.Parser.line1
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))) -}
45c3d7907ee662b0b9bb0eb126c4c2d7
  line1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   w2 :: Text.Parsec.Prim.State GHC.Base.String ()
                   w3 :: GHC.Types.Char
                         -> Text.Parsec.Prim.State GHC.Base.String ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w5 :: GHC.Types.Char
                         -> Text.Parsec.Prim.State GHC.Base.String ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w6 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b ->
                 case w2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wa1
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   Lang.Huginn.Parser.file_w1
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w3
                   w6 } }) -}
48a6904d546344ebfb2e3dd9dd2aa7d5
  mkFnRec ::
    t
    -> GHC.Base.String
    -> (t,
        Data.Either.Either
          Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)
  {- Arity: 2, Strictness: <L,U><L,U>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ t name :: t fn :: GHC.Base.String ->
                 (name,
                  (Text.Parsec.Prim.runPT
                     @ GHC.Base.String
                     @ ()
                     @ Data.Functor.Identity.Identity
                     @ Lang.Huginn.AST.Expr
                     @ GHC.Types.Char
                     (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                     Lang.Huginn.Parser.formula1
                       `cast`
                     (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                               <[GHC.Types.Char]>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <Lang.Huginn.AST.Expr>_R))
                     GHC.Tuple.()
                     Lang.Huginn.Parser.mkFnRec1
                     fn)
                    `cast`
                  (Data.Functor.Identity.NTCo:Identity[0]
                       <Data.Either.Either
                          Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr>_R))) -}
77f4ed31a4ba411b5506ef955e7359cd
  mkFnRec1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Parse error"#) -}
6b8372030f3ec85afaa33a2a1527e93d
  mkInstanceRow ::
    t
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> (t, Lang.Huginn.Eval.EnvEntry)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m,
     Unfolding: InlineRule (4, True, False)
                (\ @ t
                   i :: t
                   name :: GHC.Base.String
                   value :: GHC.Base.String
                   value_type :: GHC.Base.String ->
                 (i, Lang.Huginn.Parser.readExpr name value value_type)) -}
8d552e8be2f712b2b20a4f7e18b7b962
  mkRow :: t -> t1 -> t2 -> t3 -> (t, t1, t2, t3)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><L,U>m,
     Unfolding: InlineRule (0, True, True) GHC.Tuple.(,,,) -}
cc7be711ed0e73c16171c1e050d01e2a
  mkTestRow ::
    t
    -> t1
    -> GHC.Base.String
    -> GHC.Base.String
    -> (t, t1, GHC.Types.Double, GHC.Types.Double, GHC.Types.Bool)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ t
                   @ t1
                   w :: t
                   w1 :: t1
                   w2 :: GHC.Base.String
                   w3 :: GHC.Base.String ->
                 case Lang.Huginn.Parser.$wmkTestRow
                        @ t
                        @ t1
                        w
                        w1
                        w2
                        w3 of ww { (#,,,,#) ww1 ww2 ww3 ww4 ww5 ->
                 (ww1, ww2, ww3, ww4, ww5) }) -}
778bee665aa17bc382f2d2ad0e6b629a
  mkTestRow1 :: GHC.Types.Double
  {- Strictness: b -}
7143a2732b8cdbdada64b5288080acea
  mkTestRow2 :: GHC.Types.Double
  {- Strictness: b -}
361aa0440e02f00a26a7ad1d23d7f6fe
  mkTestRow3 :: Text.ParserCombinators.ReadP.P GHC.Types.Double
  {- Unfolding: ((GHC.Read.$fReadDouble9
                    GHC.Read.$fReadDouble_$sconvertFrac
                    Text.ParserCombinators.ReadPrec.minPrec)
                   `cast`
                 (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <GHC.Types.Double>_R)
                   @ GHC.Types.Double
                   (Text.Read.readEither5 @ GHC.Types.Double)) -}
2feb7319a61c4834eefb7ab11b30e1fe
  natural ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      GHC.Integer.Type.Integer
  {- Unfolding: (case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds7 }) -}
b05d7bbb60c3207b4ae9bf870938fe99
  noZero :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.readExpr8
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Base.String>_R)) -}
cd256344208225944e5ef82d9ded8e80
  notTabDelim ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String u Data.Functor.Identity.Identity [GHC.Types.Char]
  {- Unfolding: (\ @ u ->
                 Text.Parsec.Prim.$fAlternativeParsecT_$cmany
                   @ GHC.Base.String
                   @ u
                   @ Data.Functor.Identity.Identity
                   (Lang.Huginn.Parser.notTabDelim2 @ u)
                   @ GHC.Types.Char
                   (Lang.Huginn.Parser.notTabDelim1 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))) -}
006b2926b8e4c646ccf2b5318e3926fd
  notTabDelim1 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ u
                   @ b
                   w2 :: Text.Parsec.Prim.State GHC.Base.String u
                   w3 :: GHC.Types.Char
                         -> Text.Parsec.Prim.State GHC.Base.String u
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w5 :: GHC.Types.Char
                         -> Text.Parsec.Prim.State GHC.Base.String u
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w6 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b ->
                 case w2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wa1
                   @ GHC.Base.String
                   @ u
                   @ Data.Functor.Identity.Identity
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   Lang.Huginn.Parser.notTabDelim_w1
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w3
                   w6 } }) -}
22f68fd4478e285f996721da1fbc232a
  notTabDelim2 ::
    GHC.Base.Applicative
      (Text.Parsec.Prim.ParsecT
         GHC.Base.String u Data.Functor.Identity.Identity)
  {- Unfolding: (\ @ u ->
                 Text.Parsec.Prim.$fApplicativeParsecT
                   @ GHC.Base.String
                   @ u
                   @ Data.Functor.Identity.Identity
                   (Text.Parsec.Prim.$fFunctorParsecT
                      @ GHC.Base.String
                      @ u
                      @ Data.Functor.Identity.Identity)) -}
c58a6f234b2dfb6b7f1803f07381d144
  notTabDelim_w1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\t\n"#) -}
78123c7d8b698f914aa6655ac3101265
  number ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity GHC.Types.Double
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.readExpr7
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Types.Double>_R)) -}
5a937d6f331362bf5ba5ac50379a4487
  parens ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity a
  {- Unfolding: (\ @ a5 ->
                 case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds17 @ a5 }) -}
8bd25b61f8eb44d1af665b1416f6120c
  parseExpr ::
    GHC.Base.String
    -> Data.Either.Either
         Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.parseExpr1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Data.Functor.Identity.NTCo:Identity[0]
                          <Data.Either.Either
                             Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr>_R) -}
035f44fef545652279439b72bd1215ff
  parseExpr1 ::
    GHC.Base.String
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ s1 :: GHC.Base.String ->
                 Text.Parsec.Prim.runPT
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ Lang.Huginn.AST.Expr
                   @ GHC.Types.Char
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   Lang.Huginn.Parser.formula1
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Lang.Huginn.AST.Expr>_R))
                   GHC.Tuple.()
                   Lang.Huginn.Parser.mkFnRec1
                   s1) -}
901acafde5e5b4f07358698b0096fc76
  parseTSVFunctions ::
    GHC.Base.String
    -> Data.Either.Either
         Text.Parsec.Error.ParseError
         [(GHC.Base.String,
           Data.Either.Either
             Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.parseTSVFunctions1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Data.Functor.Identity.NTCo:Identity[0]
                          <Data.Either.Either
                             Text.Parsec.Error.ParseError
                             [(GHC.Base.String,
                               Data.Either.Either
                                 Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)]>_R) -}
3d31fd58e067128d130d55f8f1fa98b4
  parseTSVFunctions1 ::
    GHC.Base.String
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            Text.Parsec.Error.ParseError
            [(GHC.Base.String,
              Data.Either.Either
                Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)])
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ s1 :: GHC.Base.String ->
                 Text.Parsec.Prim.runPT
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [(GHC.Base.String,
                       Data.Either.Either
                         Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)]
                   @ GHC.Types.Char
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   Lang.Huginn.Parser.parseTSVFunctions3
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[(GHC.Base.String,
                                Data.Either.Either
                                  Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)]>_R))
                   GHC.Tuple.()
                   Lang.Huginn.Parser.parseTSVFunctions2
                   s1) -}
f3910bd2c74cf2d68e2d7b3f76efaef9
  parseTSVFunctions2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ERROR"#) -}
19b330206141f63d6027c34ded9afa2b
  parseTSVFunctions3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([(GHC.Base.String,
          Data.Either.Either
            Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([(GHC.Base.String,
          Data.Either.Either
            Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w4 :: [(GHC.Base.String,
                           Data.Either.Either
                             Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)]
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w5 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w6 :: [(GHC.Base.String,
                           Data.Either.Either
                             Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)]
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w7 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Prim.$wa
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ [(GHC.Base.String,
                       Data.Either.Either
                         Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)]
                   Lang.Huginn.Parser.parseTSVFunctions4
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()
                              -> [(GHC.Base.String,
                                   Data.Either.Either
                                     Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)]>_R))
                   Lang.Huginn.Parser.file2
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   w3
                   w4
                   w5
                   w6
                   w7) -}
42aed7104cc5593de4bc22fed2508e36
  parseTSVFunctions4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((()
         -> [(GHC.Base.String,
              Data.Either.Either
                Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((()
         -> [(GHC.Base.String,
              Data.Either.Either
                Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   w :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w1 :: (()
                          -> [(GHC.Base.String,
                               Data.Either.Either
                                 Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w2 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w3 :: (()
                          -> [(GHC.Base.String,
                               Data.Either.Either
                                 Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.$wa1 @ b1 w w1 w2 w3) -}
1a3af3fab3df62e3a9c7e946552d19da
  parseTSVFunctions5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String,
         Data.Either.Either
           Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Base.String,
         Data.Either.Either
           Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w4 :: (GHC.Base.String,
                          Data.Either.Either
                            Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w5 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w6 :: (GHC.Base.String,
                          Data.Either.Either
                            Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w7 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Prim.$wa
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ (GHC.Base.String,
                      Data.Either.Either
                        Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)
                   Lang.Huginn.Parser.parseTSVFunctions9
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String
                              -> (GHC.Base.String,
                                  Data.Either.Either
                                    Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)>_R))
                   Lang.Huginn.Parser.parseTSVFunctions6
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   @ b1
                   w3
                   w4
                   w5
                   w6
                   w7) -}
51d85c8f201c62fd331ebe07d2821e4b
  parseTSVFunctions6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w4 :: GHC.Base.String
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w5 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w6 :: GHC.Base.String
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w7 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Prim.$wa
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ GHC.Base.String
                   Lang.Huginn.Parser.parseTSVFunctions8
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String -> GHC.Base.String>_R))
                   Lang.Huginn.Parser.parseTSVFunctions7
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   @ b1
                   w3
                   w4
                   w5
                   w6
                   w7) -}
8730f65ea28265c25255162588a494c3
  parseTSVFunctions7 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(U)>,
     Unfolding: (\ @ b
                   eta2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta3 :: GHC.Base.String
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta5 :: GHC.Base.String
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta6 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b ->
                 case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds6
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Base.String>_R)
                   @ b
                   eta2
                   eta3
                   eta4
                   eta5
                   (\ err :: Text.Parsec.Error.ParseError ->
                    (Lang.Huginn.Parser.notTabDelim @ ())
                      `cast`
                    (Text.Parsec.Prim.NTCo:ParsecT[0]
                         <[GHC.Types.Char]>_R
                         <()>_R
                         <Data.Functor.Identity.Identity>_R
                         <GHC.Base.String>_R)
                      @ b
                      eta2
                      eta3
                      eta4
                      (\ y :: GHC.Base.String
                         s' :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                         err' :: Text.Parsec.Error.ParseError ->
                       eta5 y s' (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta6 (Text.Parsec.Error.mergeError err err'))) }) -}
96a81d463c260a3db832560d4ff65cf8
  parseTSVFunctions8 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String -> GHC.Base.String)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Base.String -> GHC.Base.String)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   eta2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta3 :: (GHC.Base.String -> GHC.Base.String)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta5 :: (GHC.Base.String -> GHC.Base.String)
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta6 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.parseTSVFunctions_eta1
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Types.Char>_R)
                   @ b1
                   eta2
                   (\ x :: GHC.Types.Char -> eta3 (GHC.Base.id @ GHC.Base.String))
                   eta4
                   (\ x :: GHC.Types.Char -> eta5 (GHC.Base.id @ GHC.Base.String))
                   eta6) -}
1ad77dd14a747d5c6802ce378f3542ef
  parseTSVFunctions9 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String
         -> (GHC.Base.String,
             Data.Either.Either
               Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr))
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Base.String
         -> (GHC.Base.String,
             Data.Either.Either
               Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr))
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,C(U)>,
     Unfolding: (\ @ b1
                   s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   cok :: (GHC.Base.String
                           -> (GHC.Base.String,
                               Data.Either.Either
                                 Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr))
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   cerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eok :: (GHC.Base.String
                           -> (GHC.Base.String,
                               Data.Either.Either
                                 Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr))
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 let {
                   eta3 :: GHC.Base.String
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                     {- Arity: 1, Strictness: <L,U>,
                        Unfolding: InlineRule (1, True, False)
                                   (\ x :: GHC.Base.String ->
                                    cok (Lang.Huginn.Parser.mkFnRec @ GHC.Base.String x)) -}
                   = \ x :: GHC.Base.String ->
                     cok (Lang.Huginn.Parser.mkFnRec @ GHC.Base.String x)
                 } in
                 ds6
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Base.String>_R)
                   @ b1
                   s1
                   eta3
                   cerr
                   (\ x :: GHC.Base.String ->
                    eok (Lang.Huginn.Parser.mkFnRec @ GHC.Base.String x))
                   (\ err :: Text.Parsec.Error.ParseError ->
                    (Lang.Huginn.Parser.notTabDelim @ ())
                      `cast`
                    (Text.Parsec.Prim.NTCo:ParsecT[0]
                         <[GHC.Types.Char]>_R
                         <()>_R
                         <Data.Functor.Identity.Identity>_R
                         <GHC.Base.String>_R)
                      @ b1
                      s1
                      eta3
                      cerr
                      (\ y :: GHC.Base.String
                         s' :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                         err' :: Text.Parsec.Error.ParseError ->
                       eok
                         (Lang.Huginn.Parser.mkFnRec @ GHC.Base.String y)
                         s'
                         (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eerr (Text.Parsec.Error.mergeError err err'))) }) -}
147935d07725bba008c36296d2aa68ef
  parseTSVFunctions_eta1 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (Text.Parsec.Char.tab
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)) -}
06b7c9948340ee1b23b3f88033d6e5df
  parseTSVInstances ::
    GHC.Base.String
    -> Data.Either.Either
         Text.Parsec.Error.ParseError
         [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.parseTSVInstances1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Data.Functor.Identity.NTCo:Identity[0]
                          <Data.Either.Either
                             Text.Parsec.Error.ParseError
                             [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)]>_R) -}
1eace0f62a4711653c950075ec2ca5fa
  parseTSVInstances1 ::
    GHC.Base.String
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            Text.Parsec.Error.ParseError
            [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)])
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ s1 :: GHC.Base.String ->
                 Text.Parsec.Prim.runPT
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)]
                   @ GHC.Types.Char
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   Lang.Huginn.Parser.parseTSVInstances2
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)]>_R))
                   GHC.Tuple.()
                   Lang.Huginn.Parser.parseTSVFunctions2
                   s1) -}
3f77f12b4e28c890300628c7fd86e545
  parseTSVInstances2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w4 :: [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)]
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w5 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w6 :: [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)]
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w7 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Prim.$wa
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)]
                   Lang.Huginn.Parser.parseTSVInstances3
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <() -> [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)]>_R))
                   Lang.Huginn.Parser.file2
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   w3
                   w4
                   w5
                   w6
                   w7) -}
5045a0211f11a449ddc121e378f55299
  parseTSVInstances3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((() -> [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((() -> [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   w :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w1 :: (()
                          -> [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w2 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w3 :: (()
                          -> [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.$wa2 @ b1 w w1 w2 w3) -}
d8b87156580724f93ae10711a89f62e1
  parseTSVInstances4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w4 :: (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w5 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w6 :: (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w7 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Prim.$wa
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)
                   Lang.Huginn.Parser.parseTSVInstances5
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String
                              -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)>_R))
                   Lang.Huginn.Parser.parseTSVFunctions6
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   @ b1
                   w3
                   w4
                   w5
                   w6
                   w7) -}
6c8d13fba73ef199e0fc5a99511e04a4
  parseTSVInstances5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String
         -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry))
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Base.String
         -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry))
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w4 :: (GHC.Base.String
                          -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry))
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w5 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w6 :: (GHC.Base.String
                          -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry))
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w7 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Prim.$wa
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ (GHC.Base.String
                      -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry))
                   Lang.Huginn.Parser.parseTSVInstances6
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String
                              -> GHC.Base.String
                              -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)>_R))
                   Lang.Huginn.Parser.parseTSVFunctions6
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   @ b1
                   w3
                   w4
                   w5
                   w6
                   w7) -}
f98524495e227052d9dcbda7d0100669
  parseTSVInstances6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String
         -> GHC.Base.String
         -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry))
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Base.String
         -> GHC.Base.String
         -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry))
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w4 :: (GHC.Base.String
                          -> GHC.Base.String
                          -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry))
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w5 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w6 :: (GHC.Base.String
                          -> GHC.Base.String
                          -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry))
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w7 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Prim.$wa
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ (GHC.Base.String
                      -> GHC.Base.String
                      -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry))
                   Lang.Huginn.Parser.parseTSVInstances7
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String
                              -> GHC.Base.String
                              -> GHC.Base.String
                              -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)>_R))
                   Lang.Huginn.Parser.parseTSVFunctions7
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   @ b1
                   w3
                   w4
                   w5
                   w6
                   w7) -}
bad260f8ce86736d0991bd9d832c8e42
  parseTSVInstances7 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String
         -> GHC.Base.String
         -> GHC.Base.String
         -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry))
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Base.String
         -> GHC.Base.String
         -> GHC.Base.String
         -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry))
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,U>,
     Unfolding: (\ @ b1
                   s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   cok :: (GHC.Base.String
                           -> GHC.Base.String
                           -> GHC.Base.String
                           -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry))
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   cerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eok :: (GHC.Base.String
                           -> GHC.Base.String
                           -> GHC.Base.String
                           -> (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry))
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds7
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Integer.Type.Integer>_R)
                   @ b1
                   s1
                   (\ x :: GHC.Integer.Type.Integer ->
                    cok
                      (\ name :: GHC.Base.String
                         value :: GHC.Base.String
                         value_type :: GHC.Base.String ->
                       (x, Lang.Huginn.Parser.readExpr name value value_type)))
                   cerr
                   (\ x :: GHC.Integer.Type.Integer ->
                    eok
                      (\ name :: GHC.Base.String
                         value :: GHC.Base.String
                         value_type :: GHC.Base.String ->
                       (x, Lang.Huginn.Parser.readExpr name value value_type)))
                   eerr }) -}
3949b298f5d29773fa29dddcdc0f1119
  parseTSVTestValues ::
    GHC.Base.String
    -> Data.Either.Either
         Text.Parsec.Error.ParseError
         [(GHC.Integer.Type.Integer,
           GHC.Base.String,
           GHC.Types.Double,
           GHC.Types.Double,
           GHC.Types.Bool)]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.parseTSVTestValues1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Data.Functor.Identity.NTCo:Identity[0]
                          <Data.Either.Either
                             Text.Parsec.Error.ParseError
                             [(GHC.Integer.Type.Integer,
                               GHC.Base.String,
                               GHC.Types.Double,
                               GHC.Types.Double,
                               GHC.Types.Bool)]>_R) -}
48292a8423017ce9fc38ddb2100aead5
  parseTSVTestValues1 ::
    GHC.Base.String
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            Text.Parsec.Error.ParseError
            [(GHC.Integer.Type.Integer,
              GHC.Base.String,
              GHC.Types.Double,
              GHC.Types.Double,
              GHC.Types.Bool)])
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ s1 :: GHC.Base.String ->
                 Text.Parsec.Prim.runPT
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [(GHC.Integer.Type.Integer,
                       GHC.Base.String,
                       GHC.Types.Double,
                       GHC.Types.Double,
                       GHC.Types.Bool)]
                   @ GHC.Types.Char
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   Lang.Huginn.Parser.parseTSVTestValues2
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[(GHC.Integer.Type.Integer,
                                GHC.Base.String,
                                GHC.Types.Double,
                                GHC.Types.Double,
                                GHC.Types.Bool)]>_R))
                   GHC.Tuple.()
                   Lang.Huginn.Parser.parseTSVFunctions2
                   s1) -}
50b91d03c3d4fcf1bb5adc36531718dc
  parseTSVTestValues2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([(GHC.Integer.Type.Integer,
          GHC.Base.String,
          GHC.Types.Double,
          GHC.Types.Double,
          GHC.Types.Bool)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([(GHC.Integer.Type.Integer,
          GHC.Base.String,
          GHC.Types.Double,
          GHC.Types.Double,
          GHC.Types.Bool)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w4 :: [(GHC.Integer.Type.Integer,
                           GHC.Base.String,
                           GHC.Types.Double,
                           GHC.Types.Double,
                           GHC.Types.Bool)]
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w5 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w6 :: [(GHC.Integer.Type.Integer,
                           GHC.Base.String,
                           GHC.Types.Double,
                           GHC.Types.Double,
                           GHC.Types.Bool)]
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w7 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Prim.$wa
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ [(GHC.Integer.Type.Integer,
                       GHC.Base.String,
                       GHC.Types.Double,
                       GHC.Types.Double,
                       GHC.Types.Bool)]
                   Lang.Huginn.Parser.parseTSVTestValues3
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()
                              -> [(GHC.Integer.Type.Integer,
                                   GHC.Base.String,
                                   GHC.Types.Double,
                                   GHC.Types.Double,
                                   GHC.Types.Bool)]>_R))
                   Lang.Huginn.Parser.file2
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b1
                   w3
                   w4
                   w5
                   w6
                   w7) -}
6466a051fea9bd7abadf4c7edc98a9f7
  parseTSVTestValues3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((()
         -> [(GHC.Integer.Type.Integer,
              GHC.Base.String,
              GHC.Types.Double,
              GHC.Types.Double,
              GHC.Types.Bool)])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((()
         -> [(GHC.Integer.Type.Integer,
              GHC.Base.String,
              GHC.Types.Double,
              GHC.Types.Double,
              GHC.Types.Bool)])
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   w :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w1 :: (()
                          -> [(GHC.Integer.Type.Integer,
                               GHC.Base.String,
                               GHC.Types.Double,
                               GHC.Types.Double,
                               GHC.Types.Bool)])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w2 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w3 :: (()
                          -> [(GHC.Integer.Type.Integer,
                               GHC.Base.String,
                               GHC.Types.Double,
                               GHC.Types.Double,
                               GHC.Types.Bool)])
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.$wa3 @ b1 w w1 w2 w3) -}
432cee97ca34012117b339c15ea6e343
  parseTSVTestValues4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Integer.Type.Integer,
         GHC.Base.String,
         GHC.Types.Double,
         GHC.Types.Double,
         GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Integer.Type.Integer,
         GHC.Base.String,
         GHC.Types.Double,
         GHC.Types.Double,
         GHC.Types.Bool)
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w4 :: (GHC.Integer.Type.Integer,
                          GHC.Base.String,
                          GHC.Types.Double,
                          GHC.Types.Double,
                          GHC.Types.Bool)
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w5 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w6 :: (GHC.Integer.Type.Integer,
                          GHC.Base.String,
                          GHC.Types.Double,
                          GHC.Types.Double,
                          GHC.Types.Bool)
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w7 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Prim.$wa
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ (GHC.Integer.Type.Integer,
                      GHC.Base.String,
                      GHC.Types.Double,
                      GHC.Types.Double,
                      GHC.Types.Bool)
                   Lang.Huginn.Parser.parseTSVTestValues5
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String
                              -> (GHC.Integer.Type.Integer,
                                  GHC.Base.String,
                                  GHC.Types.Double,
                                  GHC.Types.Double,
                                  GHC.Types.Bool)>_R))
                   Lang.Huginn.Parser.parseTSVFunctions6
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   @ b1
                   w3
                   w4
                   w5
                   w6
                   w7) -}
4f8705fb9976ce27b98829d573f7d304
  parseTSVTestValues5 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String
         -> (GHC.Integer.Type.Integer,
             GHC.Base.String,
             GHC.Types.Double,
             GHC.Types.Double,
             GHC.Types.Bool))
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Base.String
         -> (GHC.Integer.Type.Integer,
             GHC.Base.String,
             GHC.Types.Double,
             GHC.Types.Double,
             GHC.Types.Bool))
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w4 :: (GHC.Base.String
                          -> (GHC.Integer.Type.Integer,
                              GHC.Base.String,
                              GHC.Types.Double,
                              GHC.Types.Double,
                              GHC.Types.Bool))
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w5 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w6 :: (GHC.Base.String
                          -> (GHC.Integer.Type.Integer,
                              GHC.Base.String,
                              GHC.Types.Double,
                              GHC.Types.Double,
                              GHC.Types.Bool))
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w7 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Prim.$wa
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ (GHC.Base.String
                      -> (GHC.Integer.Type.Integer,
                          GHC.Base.String,
                          GHC.Types.Double,
                          GHC.Types.Double,
                          GHC.Types.Bool))
                   Lang.Huginn.Parser.parseTSVTestValues6
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String
                              -> GHC.Base.String
                              -> (GHC.Integer.Type.Integer,
                                  GHC.Base.String,
                                  GHC.Types.Double,
                                  GHC.Types.Double,
                                  GHC.Types.Bool)>_R))
                   Lang.Huginn.Parser.parseTSVFunctions6
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   @ b1
                   w3
                   w4
                   w5
                   w6
                   w7) -}
24a935fdb491921aff16ad50345ab5c4
  parseTSVTestValues6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String
         -> GHC.Base.String
         -> (GHC.Integer.Type.Integer,
             GHC.Base.String,
             GHC.Types.Double,
             GHC.Types.Double,
             GHC.Types.Bool))
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Base.String
         -> GHC.Base.String
         -> (GHC.Integer.Type.Integer,
             GHC.Base.String,
             GHC.Types.Double,
             GHC.Types.Double,
             GHC.Types.Bool))
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w4 :: (GHC.Base.String
                          -> GHC.Base.String
                          -> (GHC.Integer.Type.Integer,
                              GHC.Base.String,
                              GHC.Types.Double,
                              GHC.Types.Double,
                              GHC.Types.Bool))
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w5 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w6 :: (GHC.Base.String
                          -> GHC.Base.String
                          -> (GHC.Integer.Type.Integer,
                              GHC.Base.String,
                              GHC.Types.Double,
                              GHC.Types.Double,
                              GHC.Types.Bool))
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w7 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Prim.$wa
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ (GHC.Base.String
                      -> GHC.Base.String
                      -> (GHC.Integer.Type.Integer,
                          GHC.Base.String,
                          GHC.Types.Double,
                          GHC.Types.Double,
                          GHC.Types.Bool))
                   Lang.Huginn.Parser.parseTSVTestValues7
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String
                              -> GHC.Base.String
                              -> GHC.Base.String
                              -> (GHC.Integer.Type.Integer,
                                  GHC.Base.String,
                                  GHC.Types.Double,
                                  GHC.Types.Double,
                                  GHC.Types.Bool)>_R))
                   Lang.Huginn.Parser.parseTSVFunctions7
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))
                   @ b1
                   w3
                   w4
                   w5
                   w6
                   w7) -}
0677749809401fc218291c00ee1a097b
  parseTSVTestValues7 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ((GHC.Base.String
         -> GHC.Base.String
         -> GHC.Base.String
         -> (GHC.Integer.Type.Integer,
             GHC.Base.String,
             GHC.Types.Double,
             GHC.Types.Double,
             GHC.Types.Bool))
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ((GHC.Base.String
         -> GHC.Base.String
         -> GHC.Base.String
         -> (GHC.Integer.Type.Integer,
             GHC.Base.String,
             GHC.Types.Double,
             GHC.Types.Double,
             GHC.Types.Bool))
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   cok :: (GHC.Base.String
                           -> GHC.Base.String
                           -> GHC.Base.String
                           -> (GHC.Integer.Type.Integer,
                               GHC.Base.String,
                               GHC.Types.Double,
                               GHC.Types.Double,
                               GHC.Types.Bool))
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   cerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eok :: (GHC.Base.String
                           -> GHC.Base.String
                           -> GHC.Base.String
                           -> (GHC.Integer.Type.Integer,
                               GHC.Base.String,
                               GHC.Types.Double,
                               GHC.Types.Double,
                               GHC.Types.Bool))
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds7
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Integer.Type.Integer>_R)
                   @ b1
                   s1
                   (\ x :: GHC.Integer.Type.Integer ->
                    cok
                      (Lang.Huginn.Parser.mkTestRow
                         @ GHC.Integer.Type.Integer
                         @ GHC.Base.String
                         x))
                   cerr
                   (\ x :: GHC.Integer.Type.Integer ->
                    eok
                      (Lang.Huginn.Parser.mkTestRow
                         @ GHC.Integer.Type.Integer
                         @ GHC.Base.String
                         x))
                   eerr }) -}
447736c02512af101af1e3c1c131db3a
  pythonIf :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.closure4
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
c5d9e6ddea0a9097e9896f9adbed03b6
  readDouble :: GHC.Base.String -> GHC.Types.Double
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ s :: GHC.Base.String ->
                 case Text.Read.readEither
                        @ GHC.Types.Double
                        GHC.Read.$fReadDouble
                        s of wild {
                   Data.Either.Left x -> GHC.Err.error @ GHC.Types.Double x
                   Data.Either.Right y -> y }) -}
0f592ecb230b9b54f2155a0ccd838c80
  readExpr ::
    GHC.Base.String
    -> GHC.Base.String -> GHC.Base.String -> Lang.Huginn.Eval.EnvEntry
  {- Arity: 3, Strictness: <L,U><L,U><S,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Base.String
                   w1 :: GHC.Base.String
                   w2 :: GHC.Base.String ->
                 case Lang.Huginn.Parser.$wreadExpr w w1 w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
75e93c6467cf2d836b803d5187172a28
  readExpr1 :: GHC.Types.Bool
  {- Strictness: b -}
5b48cff29a6d91d6a53ec5633f7c393b
  readExpr10 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b
                   eta :: Text.Parsec.Prim.State GHC.Base.String ()
                   eta1 :: GHC.Types.Char
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta3 :: GHC.Types.Char
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   Lang.Huginn.Parser.readExpr12
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   Lang.Huginn.Parser.readExpr11
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
04fbb8ba5bc4f6fccc6276834284d729
  readExpr11 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Text.Parsec.Char.digit2
                   (GHC.Types.[] @ GHC.Base.String)) -}
27ddd27392539cfaa99a2595f92f3ab5
  readExpr12 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   w2 :: Text.Parsec.Prim.State GHC.Base.String ()[OneShot]
                   w3 :: GHC.Types.Char
                         -> Text.Parsec.Prim.State GHC.Base.String ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot]
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot]
                   w5 :: GHC.Types.Char
                         -> Text.Parsec.Prim.State GHC.Base.String ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot]
                   w6 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b[OneShot] ->
                 case w2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wa
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   GHC.Unicode.isDigit
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w3
                   w6 } }) -}
48ea2fceb206dfe64ed78cd47c03069a
  readExpr13 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   Lang.Huginn.Parser.readExpr14) -}
bb898b95b8a1777eb6be95c35001ee0c
  readExpr14 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '.') -}
deb2c51e2fc2c98430b9a43ab0ee8fd6
  readExpr15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "float"#) -}
36630f93a5bf7c45dcc82b649a8f18b4
  readExpr16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "bool"#) -}
29908144becb2fac5175dec0dae48df7
  readExpr2 :: GHC.Types.Bool
  {- Strictness: b -}
bc678dd0e5bab53d72e7b353fc7a1455
  readExpr3 :: Text.ParserCombinators.ReadP.P GHC.Types.Bool
  {- Unfolding: (GHC.Read.$wa18
                   @ GHC.Types.Bool
                   (Text.Read.readEither5 @ GHC.Types.Bool)) -}
75b74fea49ada59e908265b5fa49add6
  readExpr4 :: Lang.Huginn.AST.Expr
  {- HasNoCafRefs, Strictness: m11,
     Unfolding: (Lang.Huginn.AST.Err Lang.Huginn.AST.NaN) -}
b9fb47e716ad0a3b4e679303f0d2f9a6
  readExpr5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NaN"#) -}
06619f09a1bb36959d7183fc9155c164
  readExpr6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,C(U)>,
     Unfolding: (\ @ b1
                   s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   cok :: Lang.Huginn.AST.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   cerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eok :: Lang.Huginn.AST.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.readExpr7
                   @ b1
                   s1
                   (\ x :: GHC.Types.Double -> cok (Lang.Huginn.AST.Num x))
                   cerr
                   (\ x :: GHC.Types.Double -> eok (Lang.Huginn.AST.Num x))
                   eerr) -}
465a42c324b7c9a0168d42d0a300ed8d
  readExpr7 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Double
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Double
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(U)>,
     Unfolding: (\ @ b
                   eta2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta3 :: GHC.Types.Double
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta5 :: GHC.Types.Double
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                   eta6 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b ->
                 case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 let {
                   lvl9 :: GHC.Base.String
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                     {- Arity: 1 -}
                   = \ x :: GHC.Base.String -> eta3 (Lang.Huginn.Parser.$sread x)
                 } in
                 let {
                   lvl10 :: GHC.Integer.Type.Integer
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b
                     {- Arity: 1 -}
                   = \ x :: GHC.Integer.Type.Integer ->
                     eta3 (GHC.Float.$fNumDouble_$cfromInteger x)
                 } in
                 let {
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b
                     {- Arity: 1, Strictness: <L,U(U(U,U,U),U)> -}
                   = \ err :: Text.Parsec.Error.ParseError ->
                     ds8
                       `cast`
                     (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Integer.Type.Integer>_R)
                       @ b
                       eta2
                       lvl10
                       eta4
                       (\ x :: GHC.Integer.Type.Integer ->
                        let {
                          y :: GHC.Types.Double
                          = case GHC.Integer.Type.doubleFromInteger x of wild1 { DEFAULT ->
                            GHC.Types.D# wild1 }
                        } in
                        \ s' :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                          err' :: Text.Parsec.Error.ParseError ->
                        eta5 y s' (Text.Parsec.Error.mergeError err err'))
                       (\ err' :: Text.Parsec.Error.ParseError ->
                        let {
                          err1 :: Text.Parsec.Error.ParseError
                          = case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                            case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                            case err' of ww7 { Text.Parsec.Error.ParseError ww8 ww9 ->
                            case ww8 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                            case Text.Parsec.Error.$wmergeError
                                   ww4
                                   ww5
                                   ww6
                                   ww2
                                   ww11
                                   ww12
                                   ww13
                                   ww9 of ww14 { (#,#) ww15 ww16 ->
                            Text.Parsec.Error.ParseError ww15 ww16 } } } } }
                        } in
                        Lang.Huginn.Parser.readExpr8
                          @ b
                          eta2
                          lvl9
                          eta4
                          (\ x :: GHC.Base.String
                             s' :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                             err'1 :: Text.Parsec.Error.ParseError[OneShot] ->
                           eta5
                             (Lang.Huginn.Parser.$sread x)
                             s'
                             (Text.Parsec.Error.mergeError err1 err'1))
                          (\ err'1 :: Text.Parsec.Error.ParseError ->
                           eta6 (Text.Parsec.Error.mergeError err1 err'1)))
                 } in
                 ds9
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Types.Double>_R)
                   @ b
                   eta2
                   eta3
                   eerr
                   eta5
                   eerr }) -}
e3546f040fcdbf8851d110eafad482e8
  readExpr8 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta1 :: GHC.Base.String
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: GHC.Base.String
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.readExpr13
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Types.Char>_R)
                   @ b1
                   eta
                   (\ x :: GHC.Types.Char
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                      err :: Text.Parsec.Error.ParseError ->
                    Lang.Huginn.Parser.readExpr9
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: GHC.Base.String
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ x :: GHC.Types.Char
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                      err :: Text.Parsec.Error.ParseError ->
                    Lang.Huginn.Parser.readExpr9
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: GHC.Base.String
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
a50d00b01eb017ae90b1c0ece079c962
  readExpr9 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta1 :: GHC.Base.String
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: GHC.Base.String
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Text.Parsec.Combinator.many3
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   Lang.Huginn.Parser.readExpr10
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b1
                   eta
                   (\ x :: [GHC.Types.Char]
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    eta1
                      (GHC.CString.unpackAppendCString# "0."# x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta2
                   (\ x :: [GHC.Types.Char]
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                      err :: Text.Parsec.Error.ParseError[OneShot] ->
                    eta3
                      (GHC.CString.unpackAppendCString# "0."# x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta4) -}
d31ecc4bea473f5e462d460679d16b4b
  replace ::
    GHC.Types.Char
    -> GHC.Types.Char -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*U(U)><L,U><S,1*U> -}
6bb8557d9d6537d735a4b39dc9f91e8d
  reservedOp ::
    GHC.Base.String
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 }) -}
80874ce56666a08f1b5d51603083478e
  statement :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.closure3
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
5ae0ab7db7d828117990a6517bd8eb2b
  stringLiteral :: Text.Parsec.String.Parser GHC.Base.String
  {- Unfolding: (case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds6 }) -}
dc8b1ec742917077a562b895e4853d08
  stxArray :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.stxArray1
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
fe6508c8ed169c149bc0f9c7590edbdc
  stxArray1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   cok :: Lang.Huginn.AST.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   cerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eok :: Lang.Huginn.AST.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.array
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <[Lang.Huginn.AST.Expr]>_R)
                   @ b1
                   s1
                   (\ x :: [Lang.Huginn.AST.Expr] -> cok (Lang.Huginn.AST.Arr x))
                   cerr
                   (\ x :: [Lang.Huginn.AST.Expr] -> eok (Lang.Huginn.AST.Arr x))
                   eerr) -}
a1f36d7c29399c4610a178ef92f00189
  stxBool :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.stxBool1
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
8076ff876aa8f6a4d4411d1d2807adcb
  stxBool1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   cok :: Lang.Huginn.AST.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   cerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eok :: Lang.Huginn.AST.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.stxBool_p
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Types.Bool>_R)
                   @ b1
                   s1
                   (\ x :: GHC.Types.Bool -> cok (Lang.Huginn.AST.Bl x))
                   cerr
                   (\ x :: GHC.Types.Bool -> eok (Lang.Huginn.AST.Bl x))
                   eerr) -}
b0da6be69a6a3813c3668e0e98cdc97c
  stxBool_p ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity GHC.Types.Bool
  {- Unfolding: (case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds15
                   @ GHC.Types.Bool
                   Lang.Huginn.Parser.bool1
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Bool>_R)) }) -}
b9e9cfcf902b6d816498af98747dbde7
  stxLet :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.stxLet1
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
c5b50ac58481ce46b415467806a69e31
  stxLet1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta1 :: Lang.Huginn.AST.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: Lang.Huginn.AST.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.stxLet4
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Base.String>_R)
                   @ b1
                   eta
                   (\ x :: GHC.Base.String
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                      err :: Text.Parsec.Error.ParseError ->
                    Lang.Huginn.Parser.stxLet2
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: Lang.Huginn.AST.Expr
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ x :: GHC.Base.String
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                      err :: Text.Parsec.Error.ParseError ->
                    Lang.Huginn.Parser.stxLet2
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: Lang.Huginn.AST.Expr
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
052550f0250c94eeab64ddf057e1c638
  stxLet2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   eta :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   eta1 :: Lang.Huginn.AST.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta3 :: Lang.Huginn.AST.Expr
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eta4 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 Lang.Huginn.Parser.word
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Base.String>_R)
                   @ b1
                   eta
                   (\ x :: GHC.Base.String
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                      err :: Text.Parsec.Error.ParseError ->
                    Lang.Huginn.Parser.stxLet3
                      x
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: Lang.Huginn.AST.Expr
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta1 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta2 (Text.Parsec.Error.mergeError err err')))
                   eta2
                   (\ x :: GHC.Base.String
                      s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                      err :: Text.Parsec.Error.ParseError ->
                    Lang.Huginn.Parser.stxLet3
                      x
                      @ b1
                      s2
                      eta1
                      eta2
                      (\ x1 :: Lang.Huginn.AST.Expr
                         s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ()[OneShot]
                         err' :: Text.Parsec.Error.ParseError[OneShot] ->
                       eta3 x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ err' :: Text.Parsec.Error.ParseError ->
                       eta4 (Text.Parsec.Error.mergeError err err')))
                   eta4) -}
a539fed9497b0b9e4f71604da5e6bdf5
  stxLet3 ::
    GHC.Base.String
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (Lang.Huginn.AST.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Lang.Huginn.AST.Expr
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
391466efc32721a242941e8f11efe0bf
  stxLet4 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds15
                   @ GHC.Base.String
                   Lang.Huginn.Parser.stxLet5
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R)) }) -}
ffb8658927724803268b526ac1295685
  stxLet5 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   Lang.Huginn.Parser.stxLet6) -}
3a6c943ec45353539029b98155a51829
  stxLet6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "let"#) -}
98da7a13c28a33fa7014d6c7ea7be06a
  stxNum ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char]
      ()
      Data.Functor.Identity.Identity
      Lang.Huginn.AST.Expr
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.readExpr6
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
cfa06bc813a973951c9b5c17379b44d4
  stxString :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.stxString1
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
34437673cb6241f249a2a4e8fd659efb
  stxString1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,C(U)><L,U><L,C(U)><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   cok :: Lang.Huginn.AST.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   cerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1
                   eok :: Lang.Huginn.AST.Expr
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1
                   eerr :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1 ->
                 case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds6
                   `cast`
                 (Text.Parsec.Prim.NTCo:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Base.String>_R)
                   @ b1
                   s1
                   (\ x :: GHC.Base.String -> cok (Lang.Huginn.AST.Str x))
                   cerr
                   (\ x :: GHC.Base.String -> eok (Lang.Huginn.AST.Str x))
                   eerr }) -}
3ea8e567c25c0a7f1c0e9ac57d578d97
  stxVar :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
  {- Arity: 5,
     Strictness: <S(LSS),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.stxVar1
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
1f170e4096c0d187ce22d50003c815fc
  stxVar1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Lang.Huginn.AST.Expr
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LSS),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w1 :: Lang.Huginn.AST.Expr
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w2 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w3 :: Lang.Huginn.AST.Expr
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Lang.Huginn.Parser.$wa4
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   (\ x :: GHC.Base.String -> w1 (Lang.Huginn.AST.Var x))
                   w2
                   w4 } }) -}
5ec6935003dfee93e2589d572795d4a8
  table ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char () Lang.Huginn.AST.Expr]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr]
                   Lang.Huginn.Parser.table39
                   Lang.Huginn.Parser.table1) -}
9d285e05a1eda18000a00c4e2d2ffaf2
  table1 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char () Lang.Huginn.AST.Expr]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr]
                   Lang.Huginn.Parser.table33
                   Lang.Huginn.Parser.table2) -}
7febb6133d38304b9526e0c1e45afbf1
  table10 ::
    Text.Parsec.Expr.Assoc
    -> Text.ParserCombinators.Parsec.Expr.Operator
         GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.binary
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.lexer15
                   Lang.Huginn.AST.Eeq) -}
3e26907909c6ccc1f992b1cc64b869ed
  table11 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char () Lang.Huginn.AST.Expr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr)
                   Lang.Huginn.Parser.table12
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char () Lang.Huginn.AST.Expr))) -}
73c7a5bce52bbfa91116edad5ec44b08
  table12 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.table13
                   Text.Parsec.Expr.AssocLeft) -}
ec21c159b89c212358c155f6d259162d
  table13 ::
    Text.Parsec.Expr.Assoc
    -> Text.ParserCombinators.Parsec.Expr.Operator
         GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.binary
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.table14
                   Lang.Huginn.AST.Egte) -}
344cf98ad68cc5eece85544910048db2
  table14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ">="#) -}
9f63240f4e74cbad2755d84a81c14e18
  table15 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char () Lang.Huginn.AST.Expr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr)
                   Lang.Huginn.Parser.table16
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char () Lang.Huginn.AST.Expr))) -}
a174591b43a26e0191c5ff0b07241a75
  table16 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.table17
                   Text.Parsec.Expr.AssocLeft) -}
9217238f2264f90bed158d801a0ece7b
  table17 ::
    Text.Parsec.Expr.Assoc
    -> Text.ParserCombinators.Parsec.Expr.Operator
         GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.binary
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.table18
                   Lang.Huginn.AST.Egt) -}
36f9f31c385761ef4d5def6ae0c6f691
  table18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ">"#) -}
7b51a1e37f041e38bdf4af70d48293e9
  table19 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char () Lang.Huginn.AST.Expr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr)
                   Lang.Huginn.Parser.table20
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char () Lang.Huginn.AST.Expr))) -}
5e433b091cf4fe1950b07c7722eb9845
  table2 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char () Lang.Huginn.AST.Expr]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr]
                   Lang.Huginn.Parser.table27
                   Lang.Huginn.Parser.table3) -}
ef5f10d8c902addfc38db88f9a866da0
  table20 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.table21
                   Text.Parsec.Expr.AssocLeft) -}
a52b6bac521d3a97e5cba6f62cf7e96f
  table21 ::
    Text.Parsec.Expr.Assoc
    -> Text.ParserCombinators.Parsec.Expr.Operator
         GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.binary
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.table22
                   Lang.Huginn.AST.Elte) -}
bb4639c6b29f9efdee07dc807f7b74f9
  table22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "<="#) -}
9f297814daaeef0329347646a492653f
  table23 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char () Lang.Huginn.AST.Expr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr)
                   Lang.Huginn.Parser.table24
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char () Lang.Huginn.AST.Expr))) -}
677ec8077953165a8c18382b2290fcd8
  table24 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.table25
                   Text.Parsec.Expr.AssocLeft) -}
fbb9914e80434f0e70a7ca8adbeb7522
  table25 ::
    Text.Parsec.Expr.Assoc
    -> Text.ParserCombinators.Parsec.Expr.Operator
         GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.binary
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.table26
                   Lang.Huginn.AST.Elt) -}
b75196fc9f3bdce4eb14e22df2421b6f
  table26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "<"#) -}
346e589c6fe28889850a4e201c1a9fd4
  table27 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char () Lang.Huginn.AST.Expr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr)
                   Lang.Huginn.Parser.table31
                   Lang.Huginn.Parser.table28) -}
edae0ec254a3aba68d6aaf3013ca15cc
  table28 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char () Lang.Huginn.AST.Expr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr)
                   Lang.Huginn.Parser.table29
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char () Lang.Huginn.AST.Expr))) -}
7707e94b869156e3dabb2887e370e1bd
  table29 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.table30
                   Text.Parsec.Expr.AssocLeft) -}
b8c9e346584011b2d016cacb5c1d507f
  table3 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char () Lang.Huginn.AST.Expr]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr]
                   Lang.Huginn.Parser.table23
                   Lang.Huginn.Parser.table4) -}
d711705510f4f233b33cd5f3e91692df
  table30 ::
    Text.Parsec.Expr.Assoc
    -> Text.ParserCombinators.Parsec.Expr.Operator
         GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.binary
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.lexer11
                   Lang.Huginn.AST.Esub) -}
bdfef85e6baebedafb290e706002aee6
  table31 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.table32
                   Text.Parsec.Expr.AssocLeft) -}
720a6071a98ac300c3621ba4555df9ea
  table32 ::
    Text.Parsec.Expr.Assoc
    -> Text.ParserCombinators.Parsec.Expr.Operator
         GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.binary
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.lexer12
                   Lang.Huginn.AST.Eadd) -}
edff81153c6079edf91123bb8940c0b4
  table33 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char () Lang.Huginn.AST.Expr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr)
                   Lang.Huginn.Parser.table37
                   Lang.Huginn.Parser.table34) -}
3485d69b7211207ec4b919316ade2fa7
  table34 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char () Lang.Huginn.AST.Expr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr)
                   Lang.Huginn.Parser.table35
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char () Lang.Huginn.AST.Expr))) -}
b6746c20ad56a4c10491e9b999c1a8e1
  table35 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.table36
                   Text.Parsec.Expr.AssocLeft) -}
24277237bcf87746d47a21877210530b
  table36 ::
    Text.Parsec.Expr.Assoc
    -> Text.ParserCombinators.Parsec.Expr.Operator
         GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.binary
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.lexer9
                   Lang.Huginn.AST.Ediv) -}
1ca053fafeeb8b04f5fcc3b727e1404f
  table37 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.table38
                   Text.Parsec.Expr.AssocLeft) -}
8b64090113fb7a25276370715e488cac
  table38 ::
    Text.Parsec.Expr.Assoc
    -> Text.ParserCombinators.Parsec.Expr.Operator
         GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.binary
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.lexer10
                   Lang.Huginn.AST.Emul) -}
afc5d7ef616cc4df43c8bef9f81bf27e
  table39 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char () Lang.Huginn.AST.Expr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr)
                   Lang.Huginn.Parser.table40
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char () Lang.Huginn.AST.Expr))) -}
589a5d199ae6c29fe382f834510ab364
  table4 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char () Lang.Huginn.AST.Expr]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr]
                   Lang.Huginn.Parser.table19
                   Lang.Huginn.Parser.table5) -}
1c0eb5ecdd83facfcf626db6754e62f1
  table40 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.table41
                   Text.Parsec.Expr.AssocLeft) -}
44dff9996fb67d7c1452d9a3954c70cb
  table41 ::
    Text.Parsec.Expr.Assoc
    -> Text.ParserCombinators.Parsec.Expr.Operator
         GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.binary
                   @ Lang.Huginn.AST.Expr
                   Lang.Huginn.Parser.lexer13
                   Lang.Huginn.AST.Epow) -}
0e68c7d34563402c7275406e99fa8879
  table5 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char () Lang.Huginn.AST.Expr]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr]
                   Lang.Huginn.Parser.table15
                   Lang.Huginn.Parser.table6) -}
2d212db0a19f99b1e7afc2707a300a8b
  table6 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char () Lang.Huginn.AST.Expr]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr]
                   Lang.Huginn.Parser.table11
                   Lang.Huginn.Parser.table7) -}
d51236b2f00d816c71b001a9cdf8b347
  table7 ::
    [[Text.ParserCombinators.Parsec.Expr.Operator
        GHC.Types.Char () Lang.Huginn.AST.Expr]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr]
                   Lang.Huginn.Parser.table8
                   (GHC.Types.[]
                      @ [Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char () Lang.Huginn.AST.Expr])) -}
a6519135f42b97e4e4ecacab073350ca
  table8 ::
    [Text.ParserCombinators.Parsec.Expr.Operator
       GHC.Types.Char () Lang.Huginn.AST.Expr]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.ParserCombinators.Parsec.Expr.Operator
                        GHC.Types.Char () Lang.Huginn.AST.Expr)
                   Lang.Huginn.Parser.table9
                   (GHC.Types.[]
                      @ (Text.ParserCombinators.Parsec.Expr.Operator
                           GHC.Types.Char () Lang.Huginn.AST.Expr))) -}
bfee48a8fde42239d5dd33485e280215
  table9 ::
    Text.ParserCombinators.Parsec.Expr.Operator
      GHC.Types.Char () Lang.Huginn.AST.Expr
  {- Unfolding: (Lang.Huginn.Parser.table10
                   Text.Parsec.Expr.AssocLeft) -}
ecb71b8736ae215238023f96673f3a13
  term :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,U><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.bla4
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Lang.Huginn.AST.Expr>_R)) -}
2a2974a4afec33af71072dab177f9dec
  testParser ::
    Text.Parsec.String.Parser Lang.Huginn.AST.Expr
    -> GHC.Base.String
    -> Data.Either.Either
         Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr
  {- Arity: 2, Strictness: <L,1*C1(C1(C1(C1(C1(U)))))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.testParser1
                  `cast`
                (<Text.Parsec.String.Parser Lang.Huginn.AST.Expr>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Data.Functor.Identity.NTCo:Identity[0]
                          <Data.Either.Either
                             Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr>_R) -}
4242c3d9998afa604502b8cea136c132
  testParser1 ::
    Text.Parsec.String.Parser Lang.Huginn.AST.Expr
    -> GHC.Base.String
    -> Data.Functor.Identity.Identity
         (Data.Either.Either
            Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)
  {- Arity: 2, Strictness: <L,1*C1(C1(C1(C1(C1(U)))))><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ p :: Text.Parsec.String.Parser Lang.Huginn.AST.Expr
                   s1 :: GHC.Base.String ->
                 Text.Parsec.Prim.runPT
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ Lang.Huginn.AST.Expr
                   @ GHC.Types.Char
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   p
                   GHC.Tuple.()
                   Lang.Huginn.Parser.testParser2
                   s1) -}
dff4aeb2addb58c95b220a0889090347
  testParser2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Some Error"#) -}
5f67ddaf01c262e5db991c6ad7172b53
  todouble :: GHC.Integer.Type.Integer -> GHC.Types.Double
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Float.$fNumDouble_$cfromInteger -}
0c3a9bf6cd822aca1ca2344b861913ad
  tsvCell ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Base.String
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.parseTSVFunctions7
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Base.String>_R)) -}
2b0725eb971f812840f06e4264ad4e56
  tsvFunction ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      (GHC.Base.String,
       Data.Either.Either
         Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.parseTSVFunctions5
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <(GHC.Base.String,
                            Data.Either.Either
                              Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)>_R)) -}
87c86742d28765aa636f64348f9c3227
  tsvFunctionsFile ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      [(GHC.Base.String,
        Data.Either.Either
          Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)]
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.parseTSVFunctions3
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[(GHC.Base.String,
                             Data.Either.Either
                               Text.Parsec.Error.ParseError Lang.Huginn.AST.Expr)]>_R)) -}
2dcbbf1180117a7fdb71439ebe89f9d9
  tsvInstanceFile ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      [(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)]
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.parseTSVInstances2
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)]>_R)) -}
a00b1b5e320a00456369abec6417e81d
  tsvInstanceLine ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      (GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.parseTSVInstances4
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <(GHC.Integer.Type.Integer, Lang.Huginn.Eval.EnvEntry)>_R)) -}
2af55a58fc2e38469746b6ead6431bea
  tsvTestValuesFile ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      [(GHC.Integer.Type.Integer,
        GHC.Base.String,
        GHC.Types.Double,
        GHC.Types.Double,
        GHC.Types.Bool)]
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.parseTSVTestValues2
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[(GHC.Integer.Type.Integer,
                             GHC.Base.String,
                             GHC.Types.Double,
                             GHC.Types.Double,
                             GHC.Types.Bool)]>_R)) -}
19d31984282674c485dda6547f288f55
  tsvTestValuesLine ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String
      ()
      Data.Functor.Identity.Identity
      (GHC.Integer.Type.Integer,
       GHC.Base.String,
       GHC.Types.Double,
       GHC.Types.Double,
       GHC.Types.Bool)
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.parseTSVTestValues4
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <(GHC.Integer.Type.Integer,
                            GHC.Base.String,
                            GHC.Types.Double,
                            GHC.Types.Double,
                            GHC.Types.Bool)>_R)) -}
bffdc954114e78d6852c8065548c405b
  tsvToken ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Base.String
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.parseTSVFunctions6
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Base.String>_R)) -}
313b4c448b4156bbe29145c5a4a611a1
  var :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Strictness: <S(LSS),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                Lang.Huginn.Parser.var1
                  `cast`
                (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Base.String>_R)) -}
0ab20a758c26435cc85e02836b0284a0
  var1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LSS),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   w :: Text.Parsec.Prim.State [GHC.Types.Char] ()
                   w1 :: GHC.Base.String
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w2 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w3 :: GHC.Base.String
                         -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b1 ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Lang.Huginn.Parser.$wa4 @ b1 ww1 ww5 ww6 ww7 ww3 w1 w2 w4 } }) -}
135d2554f721a8a441a7ee9dd8bf7641
  word :: Text.Parsec.String.Parser GHC.Base.String
  {- Unfolding: (case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds15 @ [GHC.Types.Char] Lang.Huginn.Parser.word1 }) -}
de72a6ca994217a065b5c3bbe1c930ae
  word1 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity [GHC.Types.Char]
  {- Unfolding: (Text.Parsec.Prim.$fAlternativeParsecT_$cmany
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   Lang.Huginn.Parser.$s$fApplicativeParsecT
                   @ GHC.Types.Char
                   Lang.Huginn.Parser.word2
                     `cast`
                   (Sym (Text.Parsec.Prim.NTCo:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))) -}
87b24bb81a03af137c503e6931f1ef2c
  word2 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   w2 :: Text.Parsec.Prim.State GHC.Base.String ()
                   w3 :: GHC.Types.Char
                         -> Text.Parsec.Prim.State GHC.Base.String ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w4 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w5 :: GHC.Types.Char
                         -> Text.Parsec.Prim.State GHC.Base.String ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b
                   w6 :: Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b ->
                 case w2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wa1
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   (Text.Parsec.String.$s$fStream[]mtok @ GHC.Types.Char)
                   Lang.Huginn.Parser.word_w1
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w3
                   w6 } }) -}
c770c92a4c92f264e8993d6d23cfbbe2
  word_w1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   " +-?<>\t\n\
                   \,;()[]{}*^%&$#@!/|'\""#) -}
656417fb441aab23130b11e9598769c1
  ws ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case Lang.Huginn.Parser.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds16 }) -}
"SPEC/Lang.Huginn.Parser $fApplicativeParsecT @ [Char] @ () @ Identity" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                                       (Text.Parsec.Prim.ParsecT
                                                                                                          [GHC.Types.Char]
                                                                                                          ()
                                                                                                          Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fApplicativeParsecT @ [GHC.Types.Char]
                                        @ ()
                                        @ Data.Functor.Identity.Identity
                                        $dFunctor
  = Lang.Huginn.Parser.$s$fApplicativeParsecT
"SPEC/Lang.Huginn.Parser read @ Double" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                    GHC.Types.Double
  Text.Read.read @ GHC.Types.Double $dRead
  = Lang.Huginn.Parser.$sread
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

